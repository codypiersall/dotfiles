# set up oh-my-zsh
export ZSH="$HOME/.oh-my-zsh"
export ZSH_CUSTOM="$HOME/.zsh_custom"
ZSH_THEME="mine"
plugins=(ubuntu git ripgrep fd)
fpath=($ZSH_CUSTOM/completion $fpath)
ZSH_DISABLE_COMPFIX=true
HISTSIZE=999999999
SAVEHIST=$HISTSIZE

source $ZSH/oh-my-zsh.sh

# https://stackoverflow.com/a/36044470/1612701
# makefile completion
function _makefile_targets {
    local curr_arg;
    local targets;

    # Find makefile targets available in the current directory
    targets=''
    if [[ -e "$(pwd)/Makefile" ]]; then
        targets=$( \
            grep -oE '^[a-zA-Z0-9_-]+:' Makefile \
            | sed 's/://' \
            | tr '\n' ' ' \
        )
    fi

    # Filter targets based on user input to the bash completion
    curr_arg=${COMP_WORDS[COMP_CWORD]}
    COMPREPLY=( $(compgen -W "${targets[@]}" -- $curr_arg ) );
}
complete -F _makefile_targets make

source "$HOME/.common.sh"

autoload -U zmv

export KEYTIMEOUT=10
export _current_dir="%F{blue}%~%f"

#bindkey -M viins 'jk' vi-cmd-mode
bindkey '\e[A' history-beginning-search-backward
bindkey '\e[B' history-beginning-search-forward

bindkey "^[[H" beginning-of-line
bindkey "^[[F" end-of-line
bindkey "^[[3~" delete-char

bindkey "^[[1;5C" forward-word
bindkey "^[[1;5D" backward-word
bindkey "^[[3;5~" delete-word

# zsh on WSL
bindkey "^[[C" forward-word
bindkey "^[OC" forward-char
bindkey "^[[D" backward-word
bindkey "^[OD" backward-char

# do math calculations on arguments
function zc_() {
    print "$argv = $(($*))"
    setopt glob
}

function zcc() {
    setopt glob
}

function cleanup() {
    # removes lots of files generated by making a driver, plus backup (temp) files.
    # do it in a sub shell so that
    ( setopt null_glob
      rm -rf *.pyc *.o .*.o *.cmd .*.cmd .tmp_versions Module.symvers modules.order *.mod.c *~ .*~
    )
}

_gotoerrmsg() {
    echo >&2 "ERROR: $funcstack[2] requires an argument"
}

function goto() {
    if [ $# -lt 1 ]; then
        print -rl -- $(cd  ~/.goto; ls *[^~])
        return
    fi
    if [ "$1" = "-v" ]; then
        for f in $(ls ~/.goto/*); do
            printf '%s\t%s\n' "$(basename $f)" "$(cat $f)"
        done | column -t -s $'\t' | sed s"|$HOME|~|"
        return
    fi
    cd "$(cat ~/.goto/$1)"
}

function setgoto() {
    if [ $# -lt 1 ]; then
        _gotoerrmsg
        return
    fi
    pwd > ~/.goto/$1
}

function rmgoto() {
    if [ $# -lt 1 ]; then
        _gotoerrmsg
        return
    fi
    rm ~/.goto/$1
}

yd() {
    diff -u $* | ydiff -s
}

# Any changes that shouldn't be tracked can go in the local zshrc.
source "$HOME/.zshrc_local"
compinit

# gc is set as git commit -v, but gittia (vim plugin) is better.
alias gc='git commit'
function ncf() {
    cat "$1" | pv | netcat 192.168.2.2 7000
}

# added by travis gem
[ -f /home/cody/.travis/travis.sh ] && source /home/cody/.travis/travis.sh
# 
# # >>> conda initialize >>>
# # !! Contents within this block are managed by 'conda init' !!
# __conda_setup="$("$HOME/anaconda3/bin/conda" 'shell.zsh' 'hook' 2> /dev/null)"
# pathadd "$HOME/anaconda3/bin"
# if [ $? -eq 0 ]; then
#     eval "$__conda_setup"
# else
#     if [ -f "$HOME/anaconda3/etc/profile.d/conda.sh" ]; then
#         . "$HOME/anaconda3/etc/profile.d/conda.sh"
#     else
#     fi
# fi
# unset __conda_setup
# # <<< conda initialize <<<
# 
